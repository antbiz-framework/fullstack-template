[
  {
    "name": "byte[]"
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.pattern.SyslogStartConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.BeanDescription",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.PropertyNamingStrategies",
    "fields": [
      {
        "name": "KEBAB_CASE"
      },
      {
        "name": "LOWER_CAMEL_CASE"
      },
      {
        "name": "LOWER_CASE"
      },
      {
        "name": "LOWER_DOT_CASE"
      },
      {
        "name": "SNAKE_CASE"
      },
      {
        "name": "UPPER_CAMEL_CASE"
      },
      {
        "name": "UPPER_SNAKE_CASE"
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.FileSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.module.kotlin.KotlinModule",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.gson.Gson",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.gson.GsonBuilder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "methods": [
      {
        "name": "getCatalog",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSource",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getPoolName",
        "parameterTypes": [ ]
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": [ ]
      },
      {
        "name": "getSchema",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": [ ]
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": [ ]
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": [ ]
      },
      {
        "name": "isReadOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfigMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "close",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnection",
        "parameterTypes": [ ]
      },
      {
        "name": "getHikariConfigMXBean",
        "parameterTypes": [ ]
      },
      {
        "name": "getHikariPoolMXBean",
        "parameterTypes": [ ]
      },
      {
        "name": "getLoginTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogWriter",
        "parameterTypes": [ ]
      },
      {
        "name": "getParentLogger",
        "parameterTypes": [ ]
      },
      {
        "name": "isClosed",
        "parameterTypes": [ ]
      },
      {
        "name": "isRunning",
        "parameterTypes": [ ]
      },
      {
        "name": "setLoginTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLogWriter",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.Clock",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.CompressionCodecResolver",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.HeaderMutator",
    "methods": [
      {
        "name": "setCompressionAlgorithm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.Identifiable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getId",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultClaimsBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJweHeaderBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJweHeaderMutator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setAlgorithm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCompressionAlgorithm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setAudience",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClaims",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setExpiration",
        "parameterTypes": [
          "java.util.Date"
        ]
      },
      {
        "name": "setHeader",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setHeaderParams",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIssuedAt",
        "parameterTypes": [
          "java.util.Date"
        ]
      },
      {
        "name": "setIssuer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotBefore",
        "parameterTypes": [
          "java.util.Date"
        ]
      },
      {
        "name": "setPayload",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSubject",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtHeaderBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtParserBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setAllowedClockSkewSeconds",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setClock",
        "parameterTypes": [
          "io.jsonwebtoken.Clock"
        ]
      },
      {
        "name": "setCompressionCodecResolver",
        "parameterTypes": [
          "io.jsonwebtoken.CompressionCodecResolver"
        ]
      },
      {
        "name": "setSigningKey",
        "parameterTypes": [
          "byte[]"
        ]
      },
      {
        "name": "setSigningKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSigningKey",
        "parameterTypes": [
          "java.security.Key"
        ]
      },
      {
        "name": "setSigningKeyResolver",
        "parameterTypes": [
          "io.jsonwebtoken.SigningKeyResolver"
        ]
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.DelegatingClaimsMutator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setAudience",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExpiration",
        "parameterTypes": [
          "java.util.Date"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIssuedAt",
        "parameterTypes": [
          "java.util.Date"
        ]
      },
      {
        "name": "setIssuer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotBefore",
        "parameterTypes": [
          "java.util.Date"
        ]
      },
      {
        "name": "setSubject",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.io.AbstractParserBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.io.StandardCompressionAlgorithms",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.lang.DefaultCollectionMutator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.lang.DefaultRegistry",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.lang.DelegatingMap",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.impl.lang.DelegatingMapMutator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.lang.IdRegistry",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.lang.StringRegistry",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.AbstractJwkBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.AbstractJwkParserBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.AbstractSecurityBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.DefaultDynamicJwkBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.DefaultJwkParserBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.DefaultJwkSetBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.DefaultJwkSetParserBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.DefaultKeyOperationBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.DefaultKeyOperationPolicyBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.JwksBridge",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.KeysBridge",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.StandardEncryptionAlgorithms",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.StandardKeyAlgorithms",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.StandardKeyOperations",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.StandardSecureDigestAlgorithms",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.io.ParserBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.JweHeaderMutator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.lang.CollectionMutator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.lang.MapMutator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.ProtectedHeaderMutator",
    "methods": [
      {
        "name": "setAlgorithm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.security.Jwk",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAlgorithm",
        "parameterTypes": [ ]
      },
      {
        "name": "getOperations",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.security.JwkBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.security.KeyOperation",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.jsonwebtoken.security.SecurityBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.SigningKeyResolver",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.swagger.v3.core.converter.ModelConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.converter.ModelConverterContextImpl",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.converter.ModelConverters",
    "fields": [
      {
        "name": "converters"
      }
    ]
  },
  {
    "name": "io.swagger.v3.core.filter.SpecFilter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.ApiResponsesSerializer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.Components31Mixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.ComponentsMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.DateSchemaMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.Discriminator31Mixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.ExampleMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.ExtensionsMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.Info31Mixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.MediaTypeMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.OpenAPI31Mixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.OpenAPIMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.OperationMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.Schema31Mixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.Schema31Mixin$TypeSerializer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.SchemaMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.PathsSerializer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.Components",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.examples.Example",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.ExternalDocumentation",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.headers.Header",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.info.Contact",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.info.Info",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.info.License",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.links.Link",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.links.LinkParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.ArraySchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.BinarySchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.BooleanSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.ByteArraySchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.ComposedSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.Content",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.DateSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.DateTimeSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.Discriminator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.EmailSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.Encoding",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.EncodingProperty",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.FileSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.IntegerSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.JsonSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.MapSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.MediaType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.NumberSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.ObjectSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.PasswordSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.Schema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.StringSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.UUIDSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.XML",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.OpenAPI",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.Operation",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.parameters.CookieParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.parameters.HeaderParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.parameters.Parameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.parameters.PathParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.parameters.QueryParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.parameters.RequestBody",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.PathItem",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.Paths",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.responses.ApiResponse",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.responses.ApiResponses",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.security.OAuthFlow",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.security.OAuthFlows",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.security.Scopes",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.security.SecurityRequirement",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.security.SecurityScheme",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.security.SecurityScheme$In",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.security.SecurityScheme$Type",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.servers.Server",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.servers.ServerVariable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.servers.ServerVariables",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.tags.Tag",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.inject.Inject"
  },
  {
    "name": "jakarta.inject.Provider"
  },
  {
    "name": "jakarta.inject.Qualifier"
  },
  {
    "name": "jakarta.persistence.EntityManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "jakarta.persistence.EntityManagerFactory",
    "condition": {
      "typeReachable": "org.springframework.orm.jpa.SharedEntityManagerCreator"
    },
    "methods": [
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetamodel",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "jakarta.persistence.NamedEntityGraph",
    "condition": {
      "typeReachable": "org.springframework.data.jpa.repository.EntityGraph"
    },
    "allPublicMethods": true
  },
  {
    "name": "jakarta.persistence.Query",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getResultStream",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "jakarta.servlet.Filter",
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.MultipartConfigElement",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.Servlet",
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.ServletConfig",
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.validation.Validator",
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.validation.ValidatorFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.io.Closeable",
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.io.File"
  },
  {
    "name": "java.io.InputStream"
  },
  {
    "name": "java.lang.Enum",
    "methods": [
      {
        "name": "getDeclaringClass",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.Integer"
  },
  {
    "name": "java.lang.invoke.MethodHandles",
    "allDeclaredClasses": true
  },
  {
    "name": "java.lang.invoke.MethodHandles$Lookup"
  },
  {
    "name": "java.lang.Iterable",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Long"
  },
  {
    "name": "java.lang.Module",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.module.Configuration",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.module.ResolvedModule",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.ModuleLayer",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Number"
  },
  {
    "name": "java.lang.Object",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Void"
  },
  {
    "name": "java.net.http.HttpClient",
    "condition": {
      "typeReachable": "java.net.http.HttpClient"
    }
  },
  {
    "name": "java.net.InetSocketAddress"
  },
  {
    "name": "java.net.SocketAddress"
  },
  {
    "name": "java.net.URI",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.net.URL"
  },
  {
    "name": "java.nio.charset.Charset"
  },
  {
    "name": "java.security.Key",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.security.PrivateKey",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.security.PublicKey",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.sql.Date",
    "condition": {
      "typeReachable": "java.sql.Date"
    },
    "methods": [
      {
        "name": "toLocalDate",
        "parameterTypes": [ ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      }
    ]
  },
  {
    "name": "java.sql.Wrapper",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.time.Duration"
  },
  {
    "name": "java.time.Instant"
  },
  {
    "name": "java.time.LocalDate"
  },
  {
    "name": "java.time.LocalDateTime"
  },
  {
    "name": "java.time.ZonedDateTime"
  },
  {
    "name": "java.util.Collection"
  },
  {
    "name": "java.util.concurrent.Executor",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.concurrent.ThreadFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.EventListener",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.List",
    "methods": [
      {
        "name": "getFirst",
        "parameterTypes": [ ]
      },
      {
        "name": "getLast",
        "parameterTypes": [ ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.util.Locale"
  },
  {
    "name": "java.util.Locale$LanguageRange"
  },
  {
    "name": "java.util.Map",
    "methods": [
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.util.Properties",
    "allPublicMethods": true
  },
  {
    "name": "java.util.Set"
  },
  {
    "name": "java.util.UUID"
  },
  {
    "name": "javax.inject.Inject"
  },
  {
    "name": "javax.inject.Qualifier"
  },
  {
    "name": "javax.money.MonetaryAmount"
  },
  {
    "name": "javax.security.auth.Destroyable",
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.sql.CommonDataSource",
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.sql.DataSource",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "kotlin.enums.EnumEntries",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "kotlin.Metadata"
  },
  {
    "name": "kotlin.reflect.full.KClasses"
  },
  {
    "name": "org.antbiz.starter.backend.AntbizFrameworkApplication",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.AntbizFrameworkApplicationKt"
  },
  {
    "name": "org.antbiz.starter.backend.AntbizFrameworkApplicationKt__ApplicationContextInitializer",
    "condition": {
      "typeReachable": "org.antbiz.starter.backend.AntbizFrameworkApplicationKt"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.config.JwtConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "privateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "publicKey",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.config.JwtConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.config.JwtConfig$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.antbiz.starter.backend.config.JwtConfig$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.antbiz.starter.backend.config.SecurityConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.antbiz.starter.backend.service.UserService",
          "org.antbiz.starter.backend.security.JwtAuthenticationFilter",
          "org.antbiz.starter.backend.security.ExceptionHandlerFilter",
          "java.lang.String"
        ]
      },
      {
        "name": "authenticationManager",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"
        ]
      },
      {
        "name": "authenticationProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "passwordEncoder",
        "parameterTypes": [ ]
      },
      {
        "name": "securityFilterChain",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.builders.HttpSecurity",
          "org.springframework.security.core.userdetails.UserDetailsService"
        ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.config.SecurityConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.antbiz.starter.backend.service.UserService",
          "org.antbiz.starter.backend.security.JwtAuthenticationFilter",
          "org.antbiz.starter.backend.security.ExceptionHandlerFilter",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.config.SecurityConfig$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.antbiz.starter.backend.config.SecurityConfig$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.antbiz.starter.backend.controller.AuthController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "authenticateUser",
        "parameterTypes": [
          "org.antbiz.starter.backend.controller.LoginRequest"
        ]
      },
      {
        "name": "deleteProfile",
        "parameterTypes": [
          "org.antbiz.starter.backend.model.User"
        ]
      },
      {
        "name": "getUserInfo",
        "parameterTypes": [
          "org.antbiz.starter.backend.model.User"
        ]
      },
      {
        "name": "logoutUser",
        "parameterTypes": [
          "org.antbiz.starter.backend.controller.LogoutRequest"
        ]
      },
      {
        "name": "refreshToken",
        "parameterTypes": [
          "org.antbiz.starter.backend.controller.TokenRefreshRequest"
        ]
      },
      {
        "name": "signUpUser",
        "parameterTypes": [
          "org.antbiz.starter.backend.controller.SignUpRequest"
        ]
      },
      {
        "name": "updateProfile",
        "parameterTypes": [
          "org.antbiz.starter.backend.model.User",
          "org.springframework.web.multipart.MultipartFile"
        ]
      },
      {
        "name": "updateUser",
        "parameterTypes": [
          "org.antbiz.starter.backend.model.User",
          "org.antbiz.starter.backend.controller.UpdateUserRequest"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationManager",
          "org.antbiz.starter.backend.repository.UserRepository",
          "org.antbiz.starter.backend.repository.RefreshTokenRepository",
          "org.antbiz.starter.backend.jwt.JwtProvider",
          "org.antbiz.starter.backend.service.TokenService",
          "org.springframework.security.crypto.password.PasswordEncoder"
        ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.controller.AuthController$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.antbiz.starter.backend.controller.LoginController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "loginPage",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.controller.LoginRequest",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": [ ]
      },
      {
        "name": "component2",
        "parameterTypes": [ ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "org.antbiz.starter.backend.controller.LoginRequest",
          "java.lang.String",
          "java.lang.String",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getEmail",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.controller.LoginResponse",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": [ ]
      },
      {
        "name": "component2",
        "parameterTypes": [ ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "org.antbiz.starter.backend.controller.LoginResponse",
          "java.lang.String",
          "java.lang.String",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getAccessToken",
        "parameterTypes": [ ]
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.controller.LogoutRequest",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": [ ]
      },
      {
        "name": "component2",
        "parameterTypes": [ ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "org.antbiz.starter.backend.controller.LogoutRequest",
          "java.lang.String",
          "java.lang.String",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getAccessToken",
        "parameterTypes": [ ]
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.controller.SignUpRequest",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "birthDate"
      },
      {
        "name": "userName"
      }
    ],
    "methods": [
      {
        "name": "component1",
        "parameterTypes": [ ]
      },
      {
        "name": "component2",
        "parameterTypes": [ ]
      },
      {
        "name": "component3",
        "parameterTypes": [ ]
      },
      {
        "name": "component4",
        "parameterTypes": [ ]
      },
      {
        "name": "component5",
        "parameterTypes": [ ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "org.antbiz.starter.backend.model.GenderEnum",
          "java.lang.String"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "org.antbiz.starter.backend.controller.SignUpRequest",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "org.antbiz.starter.backend.model.GenderEnum",
          "java.lang.String",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getBirthDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getEmail",
        "parameterTypes": [ ]
      },
      {
        "name": "getGender",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.controller.SignUpResponse",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": [ ]
      },
      {
        "name": "component2",
        "parameterTypes": [ ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "org.antbiz.starter.backend.controller.SignUpResponse",
          "java.lang.String",
          "java.lang.String",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getAccessToken",
        "parameterTypes": [ ]
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.controller.TokenRefreshRequest",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": [ ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "org.antbiz.starter.backend.controller.TokenRefreshRequest",
          "java.lang.String",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.controller.TokenRefreshResponse",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": [ ]
      },
      {
        "name": "component2",
        "parameterTypes": [ ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "org.antbiz.starter.backend.controller.TokenRefreshResponse",
          "java.lang.String",
          "java.lang.String",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getAccessToken",
        "parameterTypes": [ ]
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.controller.UpdateUserRequest",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "birthDate"
      },
      {
        "name": "userName"
      }
    ],
    "methods": [
      {
        "name": "component1",
        "parameterTypes": [ ]
      },
      {
        "name": "component2",
        "parameterTypes": [ ]
      },
      {
        "name": "component3",
        "parameterTypes": [ ]
      },
      {
        "name": "component4",
        "parameterTypes": [ ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "org.antbiz.starter.backend.model.GenderEnum",
          "java.lang.String"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "org.antbiz.starter.backend.controller.UpdateUserRequest",
          "java.lang.String",
          "java.lang.String",
          "org.antbiz.starter.backend.model.GenderEnum",
          "java.lang.String",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getBirthDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getGender",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.controller.UpdateUserResponse",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": [ ]
      },
      {
        "name": "component2",
        "parameterTypes": [ ]
      },
      {
        "name": "component3",
        "parameterTypes": [ ]
      },
      {
        "name": "component4",
        "parameterTypes": [ ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "org.antbiz.starter.backend.model.GenderEnum",
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "org.antbiz.starter.backend.controller.UpdateUserResponse",
          "java.lang.String",
          "java.lang.String",
          "org.antbiz.starter.backend.model.GenderEnum",
          "java.time.LocalDateTime",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getBirthDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getEmail",
        "parameterTypes": [ ]
      },
      {
        "name": "getGender",
        "parameterTypes": [ ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.controller.UserInfoDTO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "_profileBucketName"
      },
      {
        "name": "_profileEndpoint"
      },
      {
        "name": "profileSrc"
      }
    ],
    "methods": [
      {
        "name": "component1",
        "parameterTypes": [ ]
      },
      {
        "name": "component2",
        "parameterTypes": [ ]
      },
      {
        "name": "component3",
        "parameterTypes": [ ]
      },
      {
        "name": "component4",
        "parameterTypes": [ ]
      },
      {
        "name": "component5",
        "parameterTypes": [ ]
      },
      {
        "name": "component6",
        "parameterTypes": [ ]
      },
      {
        "name": "component7",
        "parameterTypes": [ ]
      },
      {
        "name": "component8",
        "parameterTypes": [ ]
      },
      {
        "name": "component9",
        "parameterTypes": [ ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.List",
          "java.lang.String",
          "org.antbiz.starter.backend.model.GenderEnum",
          "java.time.LocalDate",
          "java.lang.String",
          "java.time.LocalDateTime",
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "org.antbiz.starter.backend.controller.UserInfoDTO",
          "java.lang.String",
          "java.lang.String",
          "java.util.List",
          "java.lang.String",
          "org.antbiz.starter.backend.model.GenderEnum",
          "java.time.LocalDate",
          "java.lang.String",
          "java.time.LocalDateTime",
          "java.time.LocalDateTime",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getBirthDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getCreatedAt",
        "parameterTypes": [ ]
      },
      {
        "name": "getEmail",
        "parameterTypes": [ ]
      },
      {
        "name": "getGender",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getProfile",
        "parameterTypes": [ ]
      },
      {
        "name": "getProfileBucketName",
        "parameterTypes": [ ]
      },
      {
        "name": "getProfileEndpoint",
        "parameterTypes": [ ]
      },
      {
        "name": "getProfileSrc",
        "parameterTypes": [ ]
      },
      {
        "name": "getRoles",
        "parameterTypes": [ ]
      },
      {
        "name": "getUpdatedAt",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "setProfileBucketName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProfileEndpoint",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.jwt.JwtProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.security.PrivateKey",
          "java.security.PublicKey",
          "long",
          "long",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.lib.ApiResponseDTO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": [ ]
      },
      {
        "name": "component2",
        "parameterTypes": [ ]
      },
      {
        "name": "component3",
        "parameterTypes": [ ]
      },
      {
        "name": "component4",
        "parameterTypes": [ ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "org.antbiz.starter.backend.lib.ApiResponseDTO",
          "boolean",
          "java.lang.String",
          "int",
          "java.lang.Object",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getData",
        "parameterTypes": [ ]
      },
      {
        "name": "getError",
        "parameterTypes": [ ]
      },
      {
        "name": "getMessage",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.model.GenderEnum",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "getEntries",
        "parameterTypes": [ ]
      },
      {
        "name": "getValue",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.model.RefreshToken",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": [ ]
      },
      {
        "name": "component2",
        "parameterTypes": [ ]
      },
      {
        "name": "component3",
        "parameterTypes": [ ]
      },
      {
        "name": "component4",
        "parameterTypes": [ ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "org.antbiz.starter.backend.model.User",
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "org.antbiz.starter.backend.model.RefreshToken",
          "java.lang.String",
          "java.lang.String",
          "org.antbiz.starter.backend.model.User",
          "java.time.LocalDateTime",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getExpiryDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getToken",
        "parameterTypes": [ ]
      },
      {
        "name": "getUser",
        "parameterTypes": [ ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.model.RevokedToken",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": [ ]
      },
      {
        "name": "component2",
        "parameterTypes": [ ]
      },
      {
        "name": "component3",
        "parameterTypes": [ ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.String",
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "org.antbiz.starter.backend.model.RevokedToken",
          "java.lang.Long",
          "java.lang.String",
          "java.time.LocalDateTime",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getRevokedAt",
        "parameterTypes": [ ]
      },
      {
        "name": "getToken",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.model.User",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "component1",
        "parameterTypes": [ ]
      },
      {
        "name": "component10",
        "parameterTypes": [ ]
      },
      {
        "name": "component2",
        "parameterTypes": [ ]
      },
      {
        "name": "component3",
        "parameterTypes": [ ]
      },
      {
        "name": "component5",
        "parameterTypes": [ ]
      },
      {
        "name": "component6",
        "parameterTypes": [ ]
      },
      {
        "name": "component7",
        "parameterTypes": [ ]
      },
      {
        "name": "component8",
        "parameterTypes": [ ]
      },
      {
        "name": "component9",
        "parameterTypes": [ ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "org.antbiz.starter.backend.model.GenderEnum",
          "java.time.LocalDateTime",
          "java.lang.String",
          "java.time.LocalDateTime",
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "copy$default",
        "parameterTypes": [
          "org.antbiz.starter.backend.model.User",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "org.antbiz.starter.backend.model.GenderEnum",
          "java.time.LocalDateTime",
          "java.lang.String",
          "java.time.LocalDateTime",
          "java.time.LocalDateTime",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "getAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getAuthorities",
        "parameterTypes": [ ]
      },
      {
        "name": "getBirthDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getCreatedAt",
        "parameterTypes": [ ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": [ ]
      },
      {
        "name": "getEmail",
        "parameterTypes": [ ]
      },
      {
        "name": "getGender",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getProfile",
        "parameterTypes": [ ]
      },
      {
        "name": "getRoles",
        "parameterTypes": [ ]
      },
      {
        "name": "getUpdatedAt",
        "parameterTypes": [ ]
      },
      {
        "name": "getUserName",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "isAccountNonExpired",
        "parameterTypes": [ ]
      },
      {
        "name": "isCredentialsNonExpired",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "onUpdate",
        "parameterTypes": [ ]
      },
      {
        "name": "setBirthDate",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGender",
        "parameterTypes": [
          "org.antbiz.starter.backend.model.GenderEnum"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProfile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdatedAt",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.NativeConf",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.NativeConf$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.repository.RefreshTokenRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.antbiz.starter.backend.repository.RevokedTokenRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.antbiz.starter.backend.repository.UserRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.antbiz.starter.backend.security.ExceptionHandlerFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.security.JwtAuthenticationFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.antbiz.starter.backend.jwt.JwtProvider",
          "org.antbiz.starter.backend.service.UserService",
          "org.antbiz.starter.backend.service.RevokedTokenService"
        ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.service.RevokedTokenService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.antbiz.starter.backend.repository.RevokedTokenRepository"
        ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.service.TokenService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "deleteByUser",
        "parameterTypes": [
          "org.antbiz.starter.backend.model.User"
        ]
      },
      {
        "name": "verifyExpiration",
        "parameterTypes": [
          "org.antbiz.starter.backend.model.RefreshToken"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.antbiz.starter.backend.jwt.JwtProvider",
          "org.antbiz.starter.backend.repository.RefreshTokenRepository",
          "long"
        ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.service.TokenService$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.antbiz.starter.backend.service.UserService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.antbiz.starter.backend.repository.UserRepository"
        ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.SwaggerConfig",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "openAPI",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.SwaggerConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.antbiz.starter.backend.SwaggerConfig$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.antbiz.starter.backend.SwaggerConfig$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.aopalliance.aop.Advice",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.Interceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.MethodInterceptor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.apache.catalina.connector.Connector",
    "allDeclaredFields": true
  },
  {
    "name": "org.eclipse.core.runtime.FileLocator"
  },
  {
    "name": "org.h2.jdbcx.JdbcDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.query.sqm.tree.select.SqmQueryPart[]",
    "unsafeAllocated": true
  },
  {
    "name": "org.hibernate.service.jta.platform.internal.NoJtaPlatform",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.postgresql.ds.PGSimpleDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "org.reactivestreams.Publisher"
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.springdoc.api.ErrorMessage",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getMessage",
        "parameterTypes": [ ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.util.UUID"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.annotations.ParameterObject",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "additionalModelsConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "fileSupportConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "globalOpenApiCustomizer",
        "parameterTypes": [ ]
      },
      {
        "name": "initExtraSchemas",
        "parameterTypes": [ ]
      },
      {
        "name": "localSpringDocParameterNameDiscoverer",
        "parameterTypes": [ ]
      },
      {
        "name": "modelConverterRegistrar",
        "parameterTypes": [
          "java.util.Optional",
          "org.springdoc.core.properties.SpringDocConfigProperties"
        ]
      },
      {
        "name": "oas31ModelConverter",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties"
        ]
      },
      {
        "name": "openAPIBuilder",
        "parameterTypes": [
          "java.util.Optional",
          "org.springdoc.core.service.SecurityService",
          "org.springdoc.core.properties.SpringDocConfigProperties",
          "org.springdoc.core.utils.PropertyResolverUtils",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "operationBuilder",
        "parameterTypes": [
          "org.springdoc.core.service.GenericParameterService",
          "org.springdoc.core.service.RequestBodyService",
          "org.springdoc.core.service.SecurityService",
          "org.springdoc.core.utils.PropertyResolverUtils"
        ]
      },
      {
        "name": "parameterBuilder",
        "parameterTypes": [
          "org.springdoc.core.utils.PropertyResolverUtils",
          "java.util.Optional",
          "java.util.Optional",
          "org.springdoc.core.providers.ObjectMapperProvider",
          "java.util.Optional"
        ]
      },
      {
        "name": "parameterObjectNamingStrategyCustomizer",
        "parameterTypes": [ ]
      },
      {
        "name": "polymorphicModelConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "propertyResolverUtils",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableBeanFactory",
          "org.springframework.context.MessageSource",
          "org.springdoc.core.properties.SpringDocConfigProperties"
        ]
      },
      {
        "name": "requestBodyBuilder",
        "parameterTypes": [
          "org.springdoc.core.service.GenericParameterService",
          "org.springdoc.core.utils.PropertyResolverUtils"
        ]
      },
      {
        "name": "responseSupportConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "schemaPropertyDeprecatingConverter",
        "parameterTypes": [ ]
      },
      {
        "name": "securityParser",
        "parameterTypes": [
          "org.springdoc.core.utils.PropertyResolverUtils"
        ]
      },
      {
        "name": "springDocCustomizers",
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "springdocObjectMapperProvider",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties"
        ]
      },
      {
        "name": "springDocProviders",
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handleNoHandlerFound",
        "parameterTypes": [
          "org.springdoc.api.OpenApiResourceNotFoundException"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springdoc.core.configuration.SpringDocConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "queryDslQuerydslPredicateOperationCustomizer",
        "parameterTypes": [
          "java.util.Optional",
          "org.springdoc.core.properties.SpringDocConfigProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "springDataWebPropertiesProvider",
        "parameterTypes": [
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "webConversionServiceProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocJacksonKotlinModuleConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "springdocKotlinObjectMapperProvider",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocKotlinConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nullableKotlinRequestParameterCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocKotlinConfiguration$KotlinReflectDependingConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "kotlinDeprecatedPropertyCustomizer",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocKotlinxConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocPageableConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dataRestDelegatingMethodParameterCustomizer",
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "pageableOpenAPIConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "pageOpenAPIConverter",
        "parameterTypes": [
          "java.util.Optional",
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocSecurityConfiguration$SpringSecurityLoginEndpointConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springdoc.core.configuration.SpringDocSecurityConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocSortConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "sortOpenAPIConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.converters.AdditionalModelsConverter",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.converters.FileSupportConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.converters.ModelConverterRegistrar",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.converters.models.Pageable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.converters.OAS31ModelConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.converters.PageableOpenAPIConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.converters.PageOpenAPIConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.converters.PolymorphicModelConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.converters.ResponseSupportConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.converters.SchemaPropertyDeprecatingConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.converters.SortOpenAPIConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.DelegatingMethodParameterCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.GlobalOpenApiCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.GlobalOperationCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.KotlinDeprecatedPropertyCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.OpenApiCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.OperationCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.ParameterCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.ParameterObjectNamingStrategyCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.QuerydslPredicateOperationCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.SpringDocCustomizers",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.extractor.DelegatingMethodParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.models.ControllerAdviceInfo",
    "allDeclaredFields": true
  },
  {
    "name": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties",
    "methods": [
      {
        "name": "getConfigUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeepLinking",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultModelExpandDepth",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultModelRendering",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultModelsExpandDepth",
        "parameterTypes": [ ]
      },
      {
        "name": "getDisplayOperationId",
        "parameterTypes": [ ]
      },
      {
        "name": "getDisplayRequestDuration",
        "parameterTypes": [ ]
      },
      {
        "name": "getDocExpansion",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroupsOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "getLayout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxDisplayedTags",
        "parameterTypes": [ ]
      },
      {
        "name": "getOauth2RedirectUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getOperationsSorter",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getPersistAuthorization",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueryConfigEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getShowCommonExtensions",
        "parameterTypes": [ ]
      },
      {
        "name": "getShowExtensions",
        "parameterTypes": [ ]
      },
      {
        "name": "getSupportedSubmitMethods",
        "parameterTypes": [ ]
      },
      {
        "name": "getTagsSorter",
        "parameterTypes": [ ]
      },
      {
        "name": "getTryItOutEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrls",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrlsPrimaryName",
        "parameterTypes": [ ]
      },
      {
        "name": "getValidatorUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getWithCredentials",
        "parameterTypes": [ ]
      },
      {
        "name": "setConfigUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeepLinking",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDefaultModelExpandDepth",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDefaultModelRendering",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultModelsExpandDepth",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDisplayOperationId",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDisplayRequestDuration",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDocExpansion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroupsOrder",
        "parameterTypes": [
          "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction"
        ]
      },
      {
        "name": "setLayout",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxDisplayedTags",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOauth2RedirectUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOperationsSorter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPersistAuthorization",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setQueryConfigEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setShowCommonExtensions",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setShowExtensions",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportedSubmitMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTagsSorter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTryItOutEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrls",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUrlsPrimaryName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidatorUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWithCredentials",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction",
    "methods": [
      {
        "name": "isAscending",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$SwaggerUrl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowedLocales",
        "parameterTypes": [ ]
      },
      {
        "name": "getApiDocs",
        "parameterTypes": [ ]
      },
      {
        "name": "getCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getConsumesToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultConsumesMediaType",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultProducesMediaType",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroupConfigs",
        "parameterTypes": [ ]
      },
      {
        "name": "getHeadersToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getModelConverters",
        "parameterTypes": [ ]
      },
      {
        "name": "getOpenApi",
        "parameterTypes": [ ]
      },
      {
        "name": "getOverrideWithGenericResponse",
        "parameterTypes": [ ]
      },
      {
        "name": "getPackagesToExclude",
        "parameterTypes": [ ]
      },
      {
        "name": "getPackagesToScan",
        "parameterTypes": [ ]
      },
      {
        "name": "getPathsToExclude",
        "parameterTypes": [ ]
      },
      {
        "name": "getPathsToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getPreLoadingLocales",
        "parameterTypes": [ ]
      },
      {
        "name": "getProducesToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getSortConverter",
        "parameterTypes": [ ]
      },
      {
        "name": "getSpecVersion",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebjars",
        "parameterTypes": [ ]
      },
      {
        "name": "isAutoTagClasses",
        "parameterTypes": [ ]
      },
      {
        "name": "isCacheDisabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isDefaultFlatParamObject",
        "parameterTypes": [ ]
      },
      {
        "name": "isDefaultOverrideWithGenericResponse",
        "parameterTypes": [ ]
      },
      {
        "name": "isDefaultSupportFormData",
        "parameterTypes": [ ]
      },
      {
        "name": "isDisableI18n",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableDataRest",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableDefaultApiDocs",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableExtraSchemas",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableGroovy",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableHateoas",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableJavadoc",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableKotlin",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableSpringSecurity",
        "parameterTypes": [ ]
      },
      {
        "name": "isModelAndViewAllowed",
        "parameterTypes": [ ]
      },
      {
        "name": "isNullableRequestParameterEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isOpenapi31",
        "parameterTypes": [ ]
      },
      {
        "name": "isPreLoadingEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isRemoveBrokenReferenceDefinitions",
        "parameterTypes": [ ]
      },
      {
        "name": "isShowActuator",
        "parameterTypes": [ ]
      },
      {
        "name": "isShowLoginEndpoint",
        "parameterTypes": [ ]
      },
      {
        "name": "isShowOauth2Endpoints",
        "parameterTypes": [ ]
      },
      {
        "name": "isShowSpringCloudFunctions",
        "parameterTypes": [ ]
      },
      {
        "name": "isTrimKotlinIndent",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseFqn",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseManagementPort",
        "parameterTypes": [ ]
      },
      {
        "name": "isWriterWithDefaultPrettyPrinter",
        "parameterTypes": [ ]
      },
      {
        "name": "isWriterWithOrderByKeys",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowedLocales",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setApiDocs",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs"
        ]
      },
      {
        "name": "setAutoTagClasses",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$Cache"
        ]
      },
      {
        "name": "setConsumesToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDefaultConsumesMediaType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultFlatParamObject",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDefaultProducesMediaType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultSupportFormData",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisableI18n",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableDataRest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableDefaultApiDocs",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableExtraSchemas",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableGroovy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableHateoas",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableJavadoc",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableKotlin",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableSpringSecurity",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setGroupConfigs",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setHeadersToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setModelAndViewAllowed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setModelConverters",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters"
        ]
      },
      {
        "name": "setNullableRequestParameterEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOpenApi",
        "parameterTypes": [
          "io.swagger.v3.oas.models.OpenAPI"
        ]
      },
      {
        "name": "setOverrideWithGenericResponse",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPackagesToExclude",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPackagesToScan",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPathsToExclude",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPathsToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPreLoadingEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreLoadingLocales",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setProducesToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemoveBrokenReferenceDefinitions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowActuator",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowLoginEndpoint",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowOauth2Endpoints",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowSpringCloudFunctions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSortConverter",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$SortConverter"
        ]
      },
      {
        "name": "setTrimKotlinIndent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseFqn",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseManagementPort",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWebjars",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$Webjars"
        ]
      },
      {
        "name": "setWriterWithDefaultPrettyPrinter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWriterWithOrderByKeys",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroups",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isResolveExtensionsProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "isResolveSchemaProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setGroups",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$Groups"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResolveExtensionsProperties",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setResolveSchemaProperties",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs$OpenApiVersion"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs$OpenApiVersion",
    "methods": [
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$Cache",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isDisabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setDisabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$GroupConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConsumesToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroup",
        "parameterTypes": [ ]
      },
      {
        "name": "getHeadersToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getOpenApi",
        "parameterTypes": [ ]
      },
      {
        "name": "getPackagesToExclude",
        "parameterTypes": [ ]
      },
      {
        "name": "getPackagesToScan",
        "parameterTypes": [ ]
      },
      {
        "name": "getPathsToExclude",
        "parameterTypes": [ ]
      },
      {
        "name": "getPathsToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getProducesToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "setConsumesToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeadersToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOpenApi",
        "parameterTypes": [
          "io.swagger.v3.oas.models.OpenAPI"
        ]
      },
      {
        "name": "setPackagesToExclude",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPackagesToScan",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPathsToExclude",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPathsToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setProducesToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$Groups",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeprecatingConverter",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageableConverter",
        "parameterTypes": [ ]
      },
      {
        "name": "getPolymorphicConverter",
        "parameterTypes": [ ]
      },
      {
        "name": "setDeprecatingConverter",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$DeprecatingConverter"
        ]
      },
      {
        "name": "setPageableConverter",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PageableConverter"
        ]
      },
      {
        "name": "setPolymorphicConverter",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PolymorphicConverter"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$DeprecatingConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PageableConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PolymorphicConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$SortConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$Webjars",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SwaggerUiConfigProperties",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCsrf",
        "parameterTypes": [ ]
      },
      {
        "name": "getSyntaxHighlight",
        "parameterTypes": [ ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      },
      {
        "name": "isCsrfEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isDisableSwaggerDefaultUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseRootPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setCsrf",
        "parameterTypes": [
          "org.springdoc.core.properties.SwaggerUiConfigProperties$Csrf"
        ]
      },
      {
        "name": "setDisableSwaggerDefaultUrl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSyntaxHighlight",
        "parameterTypes": [
          "org.springdoc.core.properties.SwaggerUiConfigProperties$SyntaxHighlight"
        ]
      },
      {
        "name": "setUseRootPath",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SwaggerUiConfigProperties$Csrf",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCookieName",
        "parameterTypes": [ ]
      },
      {
        "name": "getHeaderName",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocalStorageKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getSessionStorageKey",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseLocalStorage",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseSessionStorage",
        "parameterTypes": [ ]
      },
      {
        "name": "setCookieName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHeaderName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocalStorageKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionStorageKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseLocalStorage",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseSessionStorage",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SwaggerUiConfigProperties$SyntaxHighlight",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getActivated",
        "parameterTypes": [ ]
      },
      {
        "name": "getTheme",
        "parameterTypes": [ ]
      },
      {
        "name": "isPresent",
        "parameterTypes": [ ]
      },
      {
        "name": "setActivated",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTheme",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SwaggerUiOAuthProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalQueryStringParams",
        "parameterTypes": [ ]
      },
      {
        "name": "getAppName",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientId",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientSecret",
        "parameterTypes": [ ]
      },
      {
        "name": "getConfigParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getRealm",
        "parameterTypes": [ ]
      },
      {
        "name": "getScopes",
        "parameterTypes": [ ]
      },
      {
        "name": "getScopeSeparator",
        "parameterTypes": [ ]
      },
      {
        "name": "getUseBasicAuthenticationWithAccessCodeGrant",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsePkceWithAuthorizationCodeGrant",
        "parameterTypes": [ ]
      },
      {
        "name": "setAdditionalQueryStringParams",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setAppName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRealm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScopes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScopeSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseBasicAuthenticationWithAccessCodeGrant",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUsePkceWithAuthorizationCodeGrant",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.providers.ObjectMapperProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.providers.RouterFunctionProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springdoc.core.providers.SpringDataWebPropertiesProvider",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.providers.SpringDocProviders",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.providers.SpringWebProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.providers.WebConversionServiceProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.service.GenericParameterService",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.service.GenericResponseService",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.service.OpenAPIService",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.service.OperationService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.service.RequestBodyService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.service.SecurityService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.utils.Constants",
    "allDeclaredFields": true
  },
  {
    "name": "org.springdoc.core.utils.PropertyResolverUtils",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.webmvc.api.OpenApiWebMvcResource",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "openapiJson",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "openapiYaml",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String",
          "java.util.Locale"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "openApiResource",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectFactory",
          "org.springdoc.core.service.AbstractRequestService",
          "org.springdoc.core.service.GenericResponseService",
          "org.springdoc.core.service.OperationService",
          "org.springdoc.core.properties.SpringDocConfigProperties",
          "org.springdoc.core.providers.SpringDocProviders",
          "org.springdoc.core.customizers.SpringDocCustomizers"
        ]
      },
      {
        "name": "requestBuilder",
        "parameterTypes": [
          "org.springdoc.core.service.GenericParameterService",
          "org.springdoc.core.service.RequestBodyService",
          "java.util.Optional",
          "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer"
        ]
      },
      {
        "name": "responseBuilder",
        "parameterTypes": [
          "org.springdoc.core.service.OperationService",
          "org.springdoc.core.properties.SpringDocConfigProperties",
          "org.springdoc.core.utils.PropertyResolverUtils"
        ]
      },
      {
        "name": "springWebProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "routerFunctionProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.webmvc.core.providers.RouterFunctionWebMvcProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.webmvc.core.service.RequestService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.webmvc.ui.SwaggerConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "indexPageTransformer",
        "parameterTypes": [
          "org.springdoc.core.properties.SwaggerUiConfigProperties",
          "org.springdoc.core.properties.SwaggerUiOAuthProperties",
          "org.springdoc.webmvc.ui.SwaggerWelcomeCommon",
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "swaggerConfigResource",
        "parameterTypes": [
          "org.springdoc.webmvc.ui.SwaggerWelcomeCommon"
        ]
      },
      {
        "name": "swaggerResourceResolver",
        "parameterTypes": [
          "org.springdoc.core.properties.SwaggerUiConfigProperties"
        ]
      },
      {
        "name": "swaggerWebMvcConfigurer",
        "parameterTypes": [
          "org.springdoc.core.properties.SwaggerUiConfigProperties",
          "org.springdoc.webmvc.ui.SwaggerIndexTransformer",
          "java.util.Optional",
          "org.springdoc.webmvc.ui.SwaggerResourceResolver"
        ]
      },
      {
        "name": "swaggerWelcome",
        "parameterTypes": [
          "org.springdoc.core.properties.SwaggerUiConfigProperties",
          "org.springdoc.core.properties.SpringDocConfigProperties",
          "org.springdoc.core.providers.SpringWebProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.webmvc.ui.SwaggerConfigResource",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "openapiJson",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.webmvc.ui.SwaggerIndexTransformer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.webmvc.ui.SwaggerResourceResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "mvcServletPath"
      }
    ],
    "methods": [
      {
        "name": "redirectToUi",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.Advisor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.PointcutAdvisor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.BeanInfoFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ApplicationProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSources",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebApplicationType",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowBeanDefinitionOverriding",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCircularReferences",
        "parameterTypes": [ ]
      },
      {
        "name": "isKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "isLazyInitialization",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogStartupInfo",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterShutdownHook",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowBeanDefinitionOverriding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowCircularReferences",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBannerMode",
        "parameterTypes": [
          "org.springframework.boot.Banner$Mode"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLazyInitialization",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogStartupInfo",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterShutdownHook",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSources",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setWebApplicationType",
        "parameterTypes": [
          "org.springframework.boot.WebApplicationType"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeoutPerShutdownPhase",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeoutPerShutdownPhase",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "persistenceExceptionTranslationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
        ]
      },
      {
        "name": "pageableCustomizer",
        "parameterTypes": [ ]
      },
      {
        "name": "sortCustomizer",
        "parameterTypes": [ ]
      },
      {
        "name": "springDataWebSettings",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageable",
        "parameterTypes": [ ]
      },
      {
        "name": "getSort",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultPageSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxPageSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getQualifierDelimiter",
        "parameterTypes": [ ]
      },
      {
        "name": "getSerializationMode",
        "parameterTypes": [ ]
      },
      {
        "name": "getSizeParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "isOneIndexedParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOneIndexedParameters",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPageParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSerializationMode",
        "parameterTypes": [
          "org.springframework.data.web.config.EnableSpringDataWebSupport$PageSerializationMode"
        ]
      },
      {
        "name": "setSizeParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Sort",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSortParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "setSortParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "gson",
        "parameterTypes": [
          "com.google.gson.GsonBuilder"
        ]
      },
      {
        "name": "gsonBuilder",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "standardGsonBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.gson.GsonProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getDisableHtmlEscaping",
        "parameterTypes": [ ]
      },
      {
        "name": "getDisableInnerClassSerialization",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnableComplexMapKeySerialization",
        "parameterTypes": [ ]
      },
      {
        "name": "getExcludeFieldsWithoutExposeAnnotation",
        "parameterTypes": [ ]
      },
      {
        "name": "getFieldNamingPolicy",
        "parameterTypes": [ ]
      },
      {
        "name": "getGenerateNonExecutableJson",
        "parameterTypes": [ ]
      },
      {
        "name": "getLenient",
        "parameterTypes": [ ]
      },
      {
        "name": "getLongSerializationPolicy",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrettyPrinting",
        "parameterTypes": [ ]
      },
      {
        "name": "getSerializeNulls",
        "parameterTypes": [ ]
      },
      {
        "name": "getStrictness",
        "parameterTypes": [ ]
      },
      {
        "name": "setDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisableHtmlEscaping",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDisableInnerClassSerialization",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEnableComplexMapKeySerialization",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExcludeFieldsWithoutExposeAnnotation",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFieldNamingPolicy",
        "parameterTypes": [
          "com.google.gson.FieldNamingPolicy"
        ]
      },
      {
        "name": "setGenerateNonExecutableJson",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLenient",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLongSerializationPolicy",
        "parameterTypes": [
          "com.google.gson.LongSerializationPolicy"
        ]
      },
      {
        "name": "setPrettyPrinting",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSerializeNulls",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStrictness",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.gson.GsonProperties$Strictness"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "clientHttpRequestFactoryBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.http.client.HttpClientProperties"
        ]
      },
      {
        "name": "clientHttpRequestFactorySettings",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.http.client.HttpClientProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.HttpClientProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "getReadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.http.client.HttpClientProperties$Factory"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRedirects",
        "parameterTypes": [
          "org.springframework.boot.http.client.ClientHttpRequestFactorySettings$Redirects"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.HttpClientProperties$Ssl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [ ]
      },
      {
        "name": "setBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "messageConverters",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "stringHttpMessageConverter",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "mappingJackson2HttpMessageConverter",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBuild",
        "parameterTypes": [ ]
      },
      {
        "name": "getGit",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.jackson.JsonMixinModuleEntries"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConstructorDetector",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatatype",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultLeniency",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultPropertyInclusion",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeserialization",
        "parameterTypes": [ ]
      },
      {
        "name": "getGenerator",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapper",
        "parameterTypes": [ ]
      },
      {
        "name": "getParser",
        "parameterTypes": [ ]
      },
      {
        "name": "getPropertyNamingStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getSerialization",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeZone",
        "parameterTypes": [ ]
      },
      {
        "name": "getVisibility",
        "parameterTypes": [ ]
      },
      {
        "name": "setConstructorDetector",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
        ]
      },
      {
        "name": "setDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultLeniency",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDefaultPropertyInclusion",
        "parameterTypes": [
          "com.fasterxml.jackson.annotation.JsonInclude$Include"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setPropertyNamingStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.util.TimeZone"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnum",
        "parameterTypes": [ ]
      },
      {
        "name": "getJsonNode",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jdbcConnectionDetails",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dataSource",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
          "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails",
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "jdbcConnectionDetailsHikariBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClassLoader",
        "parameterTypes": [ ]
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getEmbeddedDatabaseConnection",
        "parameterTypes": [ ]
      },
      {
        "name": "getJndiName",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "getXa",
        "parameterTypes": [ ]
      },
      {
        "name": "isGenerateUniqueName",
        "parameterTypes": [ ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmbeddedDatabaseConnection",
        "parameterTypes": [
          "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
        ]
      },
      {
        "name": "setGenerateUniqueName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJndiName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXa",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariJdbcConnectionDetailsBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jdbcClient",
        "parameterTypes": [
          "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTemplate",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFetchSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxRows",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueryTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setFetchSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxRows",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQueryTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jdbcTemplate",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.jdbc.JdbcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "hikariPoolDataSourceMetadataProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "namedParameterJdbcTemplate",
        "parameterTypes": [
          "org.springframework.jdbc.core.JdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDdlAuto",
        "parameterTypes": [ ]
      },
      {
        "name": "getNaming",
        "parameterTypes": [ ]
      },
      {
        "name": "setDdlAuto",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getImplicitStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getPhysicalStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "setImplicitStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhysicalStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
    "queriedMethods": [
      {
        "name": "entityManagerFactory",
        "parameterTypes": [
          "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
          "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes"
        ]
      },
      {
        "name": "entityManagerFactoryBuilder",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "jpaVendorAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
        ]
      },
      {
        "name": "openEntityManagerInViewInterceptor",
        "parameterTypes": [ ]
      },
      {
        "name": "openEntityManagerInViewInterceptorConfigurer",
        "parameterTypes": [
          "org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabase",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabasePlatform",
        "parameterTypes": [ ]
      },
      {
        "name": "getMappingResources",
        "parameterTypes": [ ]
      },
      {
        "name": "getOpenInView",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "isGenerateDdl",
        "parameterTypes": [ ]
      },
      {
        "name": "isShowSql",
        "parameterTypes": [ ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "org.springframework.orm.jpa.vendor.Database"
        ]
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGenerateDdl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOpenInView",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setShowSql",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "getUser",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$Filter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDispatcherTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$User",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getRoles",
        "parameterTypes": [ ]
      },
      {
        "name": "isPasswordGenerated",
        "parameterTypes": [ ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "authenticationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "securityFilterChainRegistration",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.security.SecurityProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.DefaultCookieSerializerCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "cookieSerializer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration$RememberMeServicesConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "rememberMeServicesCookieSerializerCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration$ServletSessionRepositoryConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setServlet",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.session.SessionProperties$Servlet"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilterDispatcherTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilterOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setFilterDispatcherTypes",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setFilterOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dataSourceScriptDatabaseInitializer",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getPlatform",
        "parameterTypes": [ ]
      },
      {
        "name": "getSchemaLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getSeparator",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "isContinueOnError",
        "parameterTypes": [ ]
      },
      {
        "name": "setContinueOnError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDataLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.sql.init.DatabaseInitializationMode"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.BundleContentNotWatchableFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeystore",
        "parameterTypes": [ ]
      },
      {
        "name": "getTruststore",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties$Store",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeystore",
        "parameterTypes": [ ]
      },
      {
        "name": "getTruststore",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties$Store",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrivateKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "isVerifyKeys",
        "parameterTypes": [ ]
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrivateKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVerifyKeys",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.boot.autoconfigure.ssl.SslProperties"
        ]
      },
      {
        "name": "fileWatcher",
        "parameterTypes": [ ]
      },
      {
        "name": "sslBundleRegistry",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "sslPropertiesSslBundleRegistrar",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.ssl.FileWatcher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties",
    "methods": [
      {
        "name": "getKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      },
      {
        "name": "isReloadOnUpdate",
        "parameterTypes": [ ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReloadOnUpdate",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Key",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Options",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCiphers",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": [ ]
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getJks",
        "parameterTypes": [ ]
      },
      {
        "name": "getPem",
        "parameterTypes": [ ]
      },
      {
        "name": "getWatch",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFile",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch$File",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getQuietPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "setQuietPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getSimple",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCoreSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCoreThreadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCoreThreadTimeout",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCoreSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isAcceptTasksAfterContextClose",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptTasksAfterContextClose",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConcurrencyLimit",
        "parameterTypes": [ ]
      },
      {
        "name": "setConcurrencyLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleAsyncTaskExecutorBuilder",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "applicationTaskExecutor",
        "parameterTypes": [
          "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "threadPoolTaskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleAsyncTaskSchedulerBuilder",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "threadPoolTaskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getSimple",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConcurrencyLimit",
        "parameterTypes": [ ]
      },
      {
        "name": "setConcurrencyLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "templateEngine",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "defaultTemplateResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafSecurityDialectConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "securityDialect",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "resourceUrlEncodingFilter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "thymeleafViewResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.thymeleaf.spring6.SpringTemplateEngine"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getExcludedViewNames",
        "parameterTypes": [ ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getReactive",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "getTemplateResolverOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "getViewNames",
        "parameterTypes": [ ]
      },
      {
        "name": "isCache",
        "parameterTypes": [ ]
      },
      {
        "name": "isCheckTemplate",
        "parameterTypes": [ ]
      },
      {
        "name": "isCheckTemplateLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableSpringElCompiler",
        "parameterTypes": [ ]
      },
      {
        "name": "isRenderHiddenMarkersBeforeCheckboxes",
        "parameterTypes": [ ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCheckTemplate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCheckTemplateLocation",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableSpringElCompiler",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setExcludedViewNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRenderHiddenMarkersBeforeCheckboxes",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTemplateResolverOrder",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setViewNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getChunkedModeViewNames",
        "parameterTypes": [ ]
      },
      {
        "name": "getFullModeViewNames",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxChunkSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMediaTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "setChunkedModeViewNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setFullModeViewNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMaxChunkSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentType",
        "parameterTypes": [ ]
      },
      {
        "name": "isProducePartialOutputWhileProcessing",
        "parameterTypes": [ ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "org.springframework.util.MimeType"
        ]
      },
      {
        "name": "setProducePartialOutputWhileProcessing",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionTemplate",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "platformTransactionManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "transactionExecutionListeners",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getRollbackOnCommitFailure",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRollbackOnCommitFailure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultValidator",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "methodValidationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "httpMessageConvertersRestClientCustomizer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "restClientBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer"
        ]
      },
      {
        "name": "restClientBuilderConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "restClientSsl",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.ssl.SslBundles"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientSsl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "restTemplateBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
        ]
      },
      {
        "name": "restTemplateBuilderConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "tomcatWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeBindingErrors",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeMessage",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludePath",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeStacktrace",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getWhitelabel",
        "parameterTypes": [ ]
      },
      {
        "name": "isIncludeException",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeBindingErrors",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIncludeMessage",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludePath",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeStacktrace",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBasePath",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getProblemdetails",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaticPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebjarsPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "setBasePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStaticPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWebjarsPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Problemdetails",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "getCompression",
        "parameterTypes": [ ]
      },
      {
        "name": "getError",
        "parameterTypes": [ ]
      },
      {
        "name": "getForwardHeadersStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttp2",
        "parameterTypes": [ ]
      },
      {
        "name": "getJetty",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpRequestHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMimeMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "getNetty",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getReactive",
        "parameterTypes": [ ]
      },
      {
        "name": "getServerHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "getTomcat",
        "parameterTypes": [ ]
      },
      {
        "name": "getUndertow",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setForwardHeadersStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
        ]
      },
      {
        "name": "setMaxHttpRequestHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMimeMappings",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxFormKeys",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpResponseHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxFormKeys",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxHttpResponseHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCustomFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getIgnorePaths",
        "parameterTypes": [ ]
      },
      {
        "name": "getRetentionPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAppend",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCustomFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFormat",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT"
        ]
      },
      {
        "name": "setIgnorePaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRetentionPeriod",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptors",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "getMin",
        "parameterTypes": [ ]
      },
      {
        "name": "getSelectors",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxQueueCapacity",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSelectors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getH2cMaxContentLength",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitialBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxInitialLineLength",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "isValidateHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setH2cMaxContentLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setInitialBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxInitialLineLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setValidateHeaders",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSessions",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxSessions",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getApplicationDisplayName",
        "parameterTypes": [ ]
      },
      {
        "name": "getContextParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getJsp",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalTldSkipPatterns",
        "parameterTypes": [ ]
      },
      {
        "name": "getBackgroundProcessorDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "getBasedir",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAliveTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpResponseHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSwallowSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMbeanregistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getProcessorCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getRedirectContextRoot",
        "parameterTypes": [ ]
      },
      {
        "name": "getRelaxedPathChars",
        "parameterTypes": [ ]
      },
      {
        "name": "getRelaxedQueryChars",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoteip",
        "parameterTypes": [ ]
      },
      {
        "name": "getResource",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "getUriEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getUseApr",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseRelativeRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setAdditionalTldSkipPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setBasedir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setKeepAliveTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxHttpResponseHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxSwallowSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setProcessorCache",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRedirectContextRoot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRelaxedPathChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRelaxedQueryChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setUseApr",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$UseApr"
        ]
      },
      {
        "name": "setUseRelativeRedirects",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConditionIf",
        "parameterTypes": [ ]
      },
      {
        "name": "getConditionUnless",
        "parameterTypes": [ ]
      },
      {
        "name": "getDirectory",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxDays",
        "parameterTypes": [ ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "isBuffered",
        "parameterTypes": [ ]
      },
      {
        "name": "isCheckExists",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isIpv6Canonical",
        "parameterTypes": [ ]
      },
      {
        "name": "isRenameOnRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "isRequestAttributesEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "setBuffered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCheckExists",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConditionIf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConditionUnless",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIpv6Canonical",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRenameOnRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequestAttributesEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getHostHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getInternalProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "getPortHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocolHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocolHeaderHttpsValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoteIpHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustedProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "setHostHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternalProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPortHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocolHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocolHeaderHttpsValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemoteIpHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustedProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCacheTtl",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCaching",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCaching",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheTtl",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinSpare",
        "parameterTypes": [ ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinSpare",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getDecodeSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "getDirectBuffers",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxCookies",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrlCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowEncodedSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "isAlwaysSetKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "isDecodeUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "isEagerFilterInit",
        "parameterTypes": [ ]
      },
      {
        "name": "isPreservePathOnForward",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowEncodedSlash",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAlwaysSetKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setDecodeSlash",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDecodeUrl",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDirectBuffers",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEagerFilterInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxCookies",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxHeaders",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxParameters",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNoRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setPreservePathOnForward",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDir",
        "parameterTypes": [ ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "setDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getServer",
        "parameterTypes": [ ]
      },
      {
        "name": "getSocket",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getIo",
        "parameterTypes": [ ]
      },
      {
        "name": "getWorker",
        "parameterTypes": [ ]
      },
      {
        "name": "setIo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWorker",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dispatcherServlet",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dispatcherServletRegistration",
        "parameterTypes": [
          "org.springframework.web.servlet.DispatcherServlet",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "error",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "errorHtml",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "mediaTypeNotAcceptable",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "basicErrorController",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.error.ErrorAttributes",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": [ ]
      },
      {
        "name": "errorPageCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      },
      {
        "name": "preserveErrorControllerTargetClassPostProcessor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      },
      {
        "name": "conventionErrorViewResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "beanNameViewResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultErrorView",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "characterEncodingFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "localeCharsetMappingsCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
        ]
      },
      {
        "name": "multipartConfigElement",
        "parameterTypes": [ ]
      },
      {
        "name": "multipartResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileSizeThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxFileSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxRequestSize",
        "parameterTypes": [ ]
      },
      {
        "name": "isResolveLazily",
        "parameterTypes": [ ]
      },
      {
        "name": "isStrictServletCompliance",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFileSizeThreshold",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxFileSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxRequestSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setResolveLazily",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStrictServletCompliance",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "servletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "tomcatServletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "tomcatServletWebServerFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "formContentFilter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ListableBeanFactory"
        ]
      },
      {
        "name": "flashMapManager",
        "parameterTypes": [ ]
      },
      {
        "name": "localeResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcContentNegotiationManager",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcConversionService",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcValidator",
        "parameterTypes": [ ]
      },
      {
        "name": "themeResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "viewNameTranslator",
        "parameterTypes": [ ]
      },
      {
        "name": "welcomePageHandlerMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "welcomePageNotAcceptableHandlerMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "resourceHandlerRegistrationCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceHandlerRegistrationCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "defaultViewResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "requestContextFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "viewResolver",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAsync",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentnegotiation",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getMessageCodesResolverFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getPathmatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getProblemdetails",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaticPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getView",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebjarsPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "isDispatchOptionsRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "isDispatchTraceRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogRequestDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogResolvedException",
        "parameterTypes": [ ]
      },
      {
        "name": "isPublishRequestHandledEvents",
        "parameterTypes": [ ]
      },
      {
        "name": "setDispatchOptionsRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDispatchTraceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogResolvedException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMessageCodesResolverFormat",
        "parameterTypes": [
          "org.springframework.validation.DefaultMessageCodesResolver$Format"
        ]
      },
      {
        "name": "setPublishRequestHandledEvents",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWebjarsPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMediaTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameterName",
        "parameterTypes": [ ]
      },
      {
        "name": "isFavorParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "setFavorParameter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMediaTypes",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMatchingStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "setMatchingStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$MatchingStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLoadOnStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getServletMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "getServletPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setLoadOnStartup",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocaleResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "getResources",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setLocaleResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getChain",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaticLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "isAddMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddMappings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachecontrol",
        "parameterTypes": [ ]
      },
      {
        "name": "getPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseLastModified",
        "parameterTypes": [ ]
      },
      {
        "name": "setPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setUseLastModified",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachePrivate",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachePublic",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getMustRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoTransform",
        "parameterTypes": [ ]
      },
      {
        "name": "getProxyRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "getSMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaleIfError",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaleWhileRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "setCachePrivate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCachePublic",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMustRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoCache",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoStore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoTransform",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProxyRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setStaleIfError",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setStaleWhileRevalidate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "isCache",
        "parameterTypes": [ ]
      },
      {
        "name": "isCompressed",
        "parameterTypes": [ ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCompressed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getContent",
        "parameterTypes": [ ]
      },
      {
        "name": "getFixed",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "websocketServletWebServerCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "org.springframework.boot.origin.Origin"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "org.springframework.boot.context.config.ConfigDataProperties$Activate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.cloud.CloudPlatform",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.AotInitializerNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.http.client.ClientHttpRequestFactorySettings",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.io.ApplicationResourceLoader$FilePathResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.io.Base64ProtocolResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.io.ClassPathResourceFilePathResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.io.ProtocolResolverApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ApplicationNameConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.CorrelationIdConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.EnclosedInSquareBracketsConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystemFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.structured.ElasticCommonSchemaProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.structured.ElasticCommonSchemaProperties$Service"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.structured.ElasticCommonSchemaProperties$Service",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.structured.GraylogExtendedLogFormatProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.logging.structured.GraylogExtendedLogFormatProperties$Service"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.structured.GraylogExtendedLogFormatProperties$Service",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.structured.StructuredLoggingJsonProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Set",
          "java.util.Set",
          "java.util.Map",
          "java.util.Map",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringApplicationRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringBootExceptionReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundleRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundles",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.client.RestClientCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateBuilder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.context.ServletContextResourceFilePathResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.FilteredReactiveWebContextResourceFilePathResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getExcludedUserAgents",
        "parameterTypes": [ ]
      },
      {
        "name": "getMimeTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinResponseSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExcludedUserAgents",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMimeTypes",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMinResponseSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDomain",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttpOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPartitioned",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getSameSite",
        "parameterTypes": [ ]
      },
      {
        "name": "getSecure",
        "parameterTypes": [ ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHttpOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPartitioned",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSameSite",
        "parameterTypes": [
          "org.springframework.boot.web.server.Cookie$SameSite"
        ]
      },
      {
        "name": "setSecure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrar",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Http2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Ssl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getCiphers",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientAuth",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      },
      {
        "name": "getServerNameBundles",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setClientAuth",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl$ClientAuth"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setKeyAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setServerNameBundles",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTrustCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Ssl$ServerNameSslBundle",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DispatcherType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorAttributes",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorController",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFilter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.FilterRegistrationBean",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "isForce",
        "parameterTypes": [ ]
      },
      {
        "name": "isForceRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "isForceResponse",
        "parameterTypes": [ ]
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setForce",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceResponse",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMapping",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getRegistered",
        "parameterTypes": [ ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRegistered",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ServletWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "getSessionStoreDirectory",
        "parameterTypes": [ ]
      },
      {
        "name": "getStoreDir",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrackingModes",
        "parameterTypes": [ ]
      },
      {
        "name": "isPersistent",
        "parameterTypes": [ ]
      },
      {
        "name": "setPersistent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStoreDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletContextInitializer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.WebListenerRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListenerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.Lifecycle",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.MessageSourceAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.Phased",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.SmartLifecycle",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.weaving.LoadTimeWeaverAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.ConversionService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.env.EnvironmentCapable",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.InputStreamSource",
    "methods": [
      {
        "name": "getInputStream",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.core.io.InputStreamSource[]",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.ProtocolResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.io.Resource",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getContentAsByteArray",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getFile",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "getURI",
        "parameterTypes": [ ]
      },
      {
        "name": "getURL",
        "parameterTypes": [ ]
      },
      {
        "name": "isFile",
        "parameterTypes": [ ]
      },
      {
        "name": "isOpen",
        "parameterTypes": [ ]
      },
      {
        "name": "isReadable",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.core.io.ResourceEditor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setIgnoreResourceNotFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.MethodParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.ParameterNameDiscoverer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncListenableTaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncTaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.TaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.dao.support.PersistenceExceptionTranslator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.domain.Example",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.domain.Unpaged",
    "condition": {
      "typeReachable": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule"
    }
  },
  {
    "name": "org.springframework.data.geo.GeoModule",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.AbstractAuditable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.AbstractPersistable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingEntityListener",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaContext",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.Query",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.DefaultJpaContext",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "char"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "setMappingContext",
        "parameterTypes": [
          "org.springframework.data.mapping.context.MappingContext"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setEntityPathResolver",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "setQueryMethodFactory",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.util.HibernateProxyDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.projection.SpelEvaluatingMethodInterceptor$TargetWrapper",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryConfigurationExtension",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.RepositoryMetadata",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamedQueries",
        "parameterTypes": [
          "org.springframework.data.repository.core.NamedQueries"
        ]
      },
      {
        "name": "setQueryLookupStrategyKey",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryLookupStrategy$Key"
        ]
      },
      {
        "name": "setRepositoryFragments",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryInformation",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactorySupport",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragment",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "implemented",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "setEnableDefaultTransactions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery$FetchableFluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.spel.spi.EvaluationContextExtension",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.spel.spi.ExtensionIdAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.util.CustomCollectionRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.KotlinBeanInfoFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.ProxyUtils$ProxyDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "projectingArgumentResolverBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "settings"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonGeoModule",
        "parameterTypes": [ ]
      },
      {
        "name": "pageModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule$PageModelConverter",
    "condition": {
      "typeReachable": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule$PlainPageSerializationWarning",
    "condition": {
      "typeReachable": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonModules",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      {
        "name": "offsetResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "pageableResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "sortResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebSettings",
    "condition": {
      "typeReachable": "org.springframework.data.web.config.EnableSpringDataWebSupport"
    },
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.PagedModel",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.PagedModel$PageMetadata",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.SortArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.FormatterRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.CacheControl",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getHeaderValue",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
    "fields": [
      {
        "name": "requestFactory"
      }
    ]
  },
  {
    "name": "org.springframework.http.client.JdkClientHttpRequestFactory",
    "methods": [
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.SimpleClientHttpRequestFactory",
    "condition": {
      "typeReachable": "java.net.HttpURLConnection"
    },
    "methods": [
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.ContentDisposition",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getCreationDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "getModificationDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getReadDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "isAttachment",
        "parameterTypes": [ ]
      },
      {
        "name": "isFormData",
        "parameterTypes": [ ]
      },
      {
        "name": "isInline",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.GenericHttpMessageConverter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.ProblemDetailJacksonMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.HttpEntity",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBody",
        "parameterTypes": [ ]
      },
      {
        "name": "getHeaders",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpHeaders",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAccept",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptLanguage",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptLanguageAsLocales",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptPatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlAllowCredentials",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlAllowHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlAllowMethods",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlAllowOrigin",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlExposeHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlRequestHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlRequestMethod",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllow",
        "parameterTypes": [ ]
      },
      {
        "name": "getCacheControl",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnection",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentDisposition",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentLanguage",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentLength",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentType",
        "parameterTypes": [ ]
      },
      {
        "name": "getDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getETag",
        "parameterTypes": [ ]
      },
      {
        "name": "getExpires",
        "parameterTypes": [ ]
      },
      {
        "name": "getHost",
        "parameterTypes": [ ]
      },
      {
        "name": "getIfMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getIfModifiedSince",
        "parameterTypes": [ ]
      },
      {
        "name": "getIfNoneMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getIfUnmodifiedSince",
        "parameterTypes": [ ]
      },
      {
        "name": "getLastModified",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrigin",
        "parameterTypes": [ ]
      },
      {
        "name": "getPragma",
        "parameterTypes": [ ]
      },
      {
        "name": "getRange",
        "parameterTypes": [ ]
      },
      {
        "name": "getUpgrade",
        "parameterTypes": [ ]
      },
      {
        "name": "getVary",
        "parameterTypes": [ ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      },
      {
        "name": "setAccept",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAcceptCharset",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAcceptLanguage",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAcceptLanguageAsLocales",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAcceptPatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAccessControlAllowCredentials",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAccessControlAllowHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAccessControlAllowMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAccessControlAllowOrigin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAccessControlExposeHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAccessControlMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAccessControlMaxAge",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setAccessControlRequestHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAccessControlRequestMethod",
        "parameterTypes": [
          "org.springframework.http.HttpMethod"
        ]
      },
      {
        "name": "setAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setAllow",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setBasicAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBearerAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCacheControl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCacheControl",
        "parameterTypes": [
          "org.springframework.http.CacheControl"
        ]
      },
      {
        "name": "setConnection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnection",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setContentDisposition",
        "parameterTypes": [
          "org.springframework.http.ContentDisposition"
        ]
      },
      {
        "name": "setContentLanguage",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setContentLength",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setETag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExpires",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setExpires",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setExpires",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.net.InetSocketAddress"
        ]
      },
      {
        "name": "setIfMatch",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIfMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIfModifiedSince",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setIfModifiedSince",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setIfModifiedSince",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIfNoneMatch",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIfNoneMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIfUnmodifiedSince",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setIfUnmodifiedSince",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setIfUnmodifiedSince",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "setOrigin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPragma",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRange",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUpgrade",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVary",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpMethod",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpRange",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.HttpStatus",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "getReasonPhrase",
        "parameterTypes": [ ]
      },
      {
        "name": "is1xxInformational",
        "parameterTypes": [ ]
      },
      {
        "name": "is2xxSuccessful",
        "parameterTypes": [ ]
      },
      {
        "name": "is3xxRedirection",
        "parameterTypes": [ ]
      },
      {
        "name": "is4xxClientError",
        "parameterTypes": [ ]
      },
      {
        "name": "is5xxServerError",
        "parameterTypes": [ ]
      },
      {
        "name": "isError",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpStatusCode",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "is1xxInformational",
        "parameterTypes": [ ]
      },
      {
        "name": "is2xxSuccessful",
        "parameterTypes": [ ]
      },
      {
        "name": "is3xxRedirection",
        "parameterTypes": [ ]
      },
      {
        "name": "is4xxClientError",
        "parameterTypes": [ ]
      },
      {
        "name": "is5xxServerError",
        "parameterTypes": [ ]
      },
      {
        "name": "isError",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.MediaType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getQualityValue",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.MediaTypeEditor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.ProblemDetail",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDetail",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstance",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "getTitle",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setDetail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstance",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "org.springframework.http.HttpStatus"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.net.URI"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.ResponseEntity",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getStatusCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatusCodeValue",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.JdbcOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.simple.JdbcClient",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy",
    "condition": {
      "typeReachable": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory"
    },
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.SimpleDriverDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.jmx.export.MBeanExporter",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerFactoryInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.JpaVendorAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.SharedEntityManagerCreator",
    "queriedMethods": [
      {
        "name": "createSharedEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.SchedulingTaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.method.MethodSecurityExpressionRoot",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionOperations",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionRoot",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.aot.hint.SecurityHintsRegistrar",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AbstractAuthenticationToken",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AccountExpiredException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationEventPublisher",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationServiceException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.BadCredentialsException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.CredentialsExpiredException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.DisabledException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.LockedException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.ProviderNotFoundException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authorization.AuthorizationProxyFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authorization.method.AuthorizationAdvisorProxyFactory",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "authenticationManagerBuilder",
        "parameterTypes": [
          "org.springframework.security.config.ObjectPostProcessor",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "enableGlobalAuthenticationAutowiredConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "initializeAuthenticationProviderBeanManagerConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "initializeUserDetailsBeanManagerConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setGlobalAuthenticationConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.ObjectPostProcessor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "objectPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.AuthorizationProxyConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "authorizationProxyFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "authorizeReturnObjectHintsRegistrar",
        "parameterTypes": [
          "org.springframework.security.authorization.AuthorizationProxyFactory"
        ]
      },
      {
        "name": "authorizeReturnObjectMethodInterceptor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.security.authorization.method.AuthorizationAdvisorProxyFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.MethodObservationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "methodAuthorizationManagerPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "methodResultAuthorizationManagerPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.MethodSecurityAdvisorRegistrar$AdvisorWrapper",
    "queriedMethods": [
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.security.authorization.method.AuthorizationAdvisor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.PrePostMethodSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "postAuthorizeAuthorizationMethodInterceptor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "postFilterAuthorizationMethodInterceptor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "preAuthorizeAuthorizationMethodInterceptor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "preFilterAuthorizationMethodInterceptor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "prePostAuthorizeExpressionHintsRegistrar",
        "parameterTypes": [ ]
      },
      {
        "name": "setAuthorizationEventPublisher",
        "parameterTypes": [
          "org.springframework.security.authorization.AuthorizationEventPublisher"
        ]
      },
      {
        "name": "setExpressionHandler",
        "parameterTypes": [
          "org.springframework.security.access.expression.method.MethodSecurityExpressionHandler"
        ]
      },
      {
        "name": "setGrantedAuthorityDefaults",
        "parameterTypes": [
          "org.springframework.security.config.core.GrantedAuthorityDefaults"
        ]
      },
      {
        "name": "setRoleHierarchy",
        "parameterTypes": [
          "org.springframework.security.access.hierarchicalroles.RoleHierarchy"
        ]
      },
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      },
      {
        "name": "setTemplateDefaults",
        "parameterTypes": [
          "org.springframework.security.authorization.method.PrePostTemplateDefaults"
        ]
      },
      {
        "name": "setTemplateDefaults",
        "parameterTypes": [
          "org.springframework.security.core.annotation.AnnotationTemplateExpressionDefaults"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityBuilder",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityConfigurer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.HttpSecurity",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "httpSecurity",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setAuthenticationConfiguration",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"
        ]
      },
      {
        "name": "setContentNegotiationStrategy",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationStrategy"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.ObjectPostProcessor"
        ]
      },
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.ObservationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "authenticationManagerPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "filterChainDecoratorPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webAuthorizationManagerPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "requestDataValueProcessor",
        "parameterTypes": [ ]
      },
      {
        "name": "springSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$HandlerMappingIntrospectorCacheFilterFactoryBean",
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "httpSecurity"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "conversionServicePostProcessor",
        "parameterTypes": [ ]
      },
      {
        "name": "delegatingApplicationListener",
        "parameterTypes": [ ]
      },
      {
        "name": "privilegeEvaluator",
        "parameterTypes": [ ]
      },
      {
        "name": "setFilterChainProxySecurityConfigurer",
        "parameterTypes": [
          "org.springframework.security.config.ObjectPostProcessor",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      },
      {
        "name": "setFilterChains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWebSecurityCustomizers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "springSecurityFilterChain",
        "parameterTypes": [ ]
      },
      {
        "name": "webSecurityExpressionHandler",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.HttpSecurityBuilder",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.ObjectPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.context.DelegatingApplicationListener",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.core.context.SecurityContextImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.core.GrantedAuthority",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAuthority",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetails",
    "methods": [
      {
        "name": "isAccountNonLocked",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetailsService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UsernameNotFoundException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.crypto.password.PasswordEncoder",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.AuthorizationManagerWebInvocationPrivilegeEvaluator$HttpServletRequestTransformer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.expression.WebSecurityExpressionRoot",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.access.HandlerMappingIntrospectorRequestTransformer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.WebInvocationPrivilegeEvaluator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.csrf.CsrfTokenRequestAttributeHandler$SupplierCsrfToken",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.DefaultSecurityFilterChain",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.SecurityFilterChain",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.util.matcher.OrRequestMatcher",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.session.web.http.CookieSerializer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.session.web.http.DefaultCookieSerializer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "transactionalEventListenerFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionAttributeSource",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.Isolation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.transaction.annotation.Propagation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionAdvisor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource",
          "org.springframework.transaction.interceptor.TransactionInterceptor"
        ]
      },
      {
        "name": "transactionInterceptor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.event.TransactionalEventListenerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.util.MimeType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getSubtype",
        "parameterTypes": [ ]
      },
      {
        "name": "getSubtypeSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "isConcrete",
        "parameterTypes": [ ]
      },
      {
        "name": "isWildcardSubtype",
        "parameterTypes": [ ]
      },
      {
        "name": "isWildcardType",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.util.PathMatcher",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.SmartValidator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.validation.Validator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationManager",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationStrategy",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.accept.MediaTypeFileExtensionResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.client.RestClient$Builder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.request.AsyncWebRequestInterceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.context.request.WebRequestInterceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.context.ServletContextAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.cors.CorsConfiguration",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.web.cors.CorsConfigurationSource",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.cors.PreFlightRequestHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.RequestContextFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.method.support.CompositeUriComponentsContributor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.method.support.HandlerMethodArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.method.support.UriComponentsContributor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.MultipartFile",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBytes",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentType",
        "parameterTypes": [ ]
      },
      {
        "name": "getInputStream",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getOriginalFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "getResource",
        "parameterTypes": [ ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.multipart.MultipartResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "queriedMethods": [
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "defaultServletHandlerMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "httpRequestHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcHandlerMappingIntrospector",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcPathMatcher",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcPatternParser",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcResourceUrlProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      {
        "name": "mvcUrlPathHelper",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "simpleControllerHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FlashMapManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.MatchableHandlerMapping",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.PathPatternMatchableHandlerMapping",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerAdapter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerExceptionResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.LocaleResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.RequestToViewNameTranslator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceTransformer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceUrlProvider",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.RequestDataValueProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ThemeResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.View",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.BeanNameViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.InternalResourceViewResolver",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternParser",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.util.UrlPathHelper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.dialect.IDialect",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.thymeleaf.dialect.IExecutionAttributeDialect",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.thymeleaf.dialect.IExpressionObjectDialect",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.thymeleaf.dialect.IProcessorDialect",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.thymeleaf.extras.springsecurity6.dialect.SpringSecurityDialect",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.ITemplateEngine",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.thymeleaf.spring6.ISpringTemplateEngine",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.thymeleaf.spring6.SpringTemplateEngine",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.spring6.view.ThymeleafViewResolver",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.thymeleaf.templateresolver.ITemplateResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.yaml.snakeyaml.Yaml",
    "condition": {
      "typeReachable": "org.springframework.boot.env.YamlPropertySourceLoader"
    }
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.controller.DataExportController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "export",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "org.springframework.util.MultiValueMap"
        ]
      },
      {
        "name": "export",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Boolean",
          "org.springframework.util.MultiValueMap"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "space.mori.dalbodeule.snapadmin.external.SnapAdmin",
          "space.mori.dalbodeule.snapadmin.external.dbmapping.SnapAdminRepository",
          "space.mori.dalbodeule.snapadmin.internal.repository.ConsoleQueryRepository",
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.controller.FileDownloadController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "repository"
      },
      {
        "name": "snapAdmin"
      }
    ],
    "methods": [
      {
        "name": "serveFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "serveImage",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.controller.GlobalController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "props"
      },
      {
        "name": "snapAdmin"
      },
      {
        "name": "userConf"
      }
    ],
    "methods": [
      {
        "name": "authenticatedUser",
        "parameterTypes": [
          "java.security.Principal"
        ]
      },
      {
        "name": "getBaseUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getProps",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueryParams",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getRequestUrl",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getUserConf",
        "parameterTypes": [ ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      },
      {
        "name": "handleException",
        "parameterTypes": [
          "java.lang.Exception",
          "org.springframework.ui.Model",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "handleNotFound",
        "parameterTypes": [
          "java.lang.Exception",
          "org.springframework.ui.Model",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "isAuthenticated",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.controller.rest.AutocompleteController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "repository"
      },
      {
        "name": "snapAdmin"
      }
    ],
    "methods": [
      {
        "name": "autocomplete",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.controller.SnapAdminController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "consoleService"
      },
      {
        "name": "properties"
      },
      {
        "name": "repository"
      },
      {
        "name": "snapAdmin"
      },
      {
        "name": "userActionService"
      },
      {
        "name": "userSettingsService"
      }
    ],
    "methods": [
      {
        "name": "console",
        "parameterTypes": [ ]
      },
      {
        "name": "consoleDelete",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.ui.Model"
        ]
      },
      {
        "name": "consoleNew",
        "parameterTypes": [
          "org.springframework.ui.Model"
        ]
      },
      {
        "name": "consoleRun",
        "parameterTypes": [
          "org.springframework.ui.Model",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Integer",
          "java.lang.Integer",
          "java.lang.String"
        ]
      },
      {
        "name": "create",
        "parameterTypes": [
          "org.springframework.ui.Model",
          "java.lang.String",
          "org.springframework.web.servlet.mvc.support.RedirectAttributes"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "org.springframework.web.servlet.mvc.support.RedirectAttributes",
          "java.security.Principal"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]",
          "org.springframework.web.servlet.mvc.support.RedirectAttributes",
          "java.security.Principal"
        ]
      },
      {
        "name": "edit",
        "parameterTypes": [
          "org.springframework.ui.Model",
          "java.lang.String",
          "java.lang.String",
          "org.springframework.web.servlet.mvc.support.RedirectAttributes"
        ]
      },
      {
        "name": "forbidden",
        "parameterTypes": [
          "org.springframework.ui.Model"
        ]
      },
      {
        "name": "help",
        "parameterTypes": [
          "org.springframework.ui.Model"
        ]
      },
      {
        "name": "index",
        "parameterTypes": [
          "org.springframework.ui.Model",
          "java.lang.String"
        ]
      },
      {
        "name": "list",
        "parameterTypes": [
          "org.springframework.ui.Model",
          "java.lang.String",
          "java.lang.Integer",
          "java.lang.String",
          "java.lang.Integer",
          "java.lang.String",
          "java.lang.String",
          "org.springframework.util.MultiValueMap",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "logs",
        "parameterTypes": [
          "org.springframework.ui.Model",
          "space.mori.dalbodeule.snapadmin.external.dto.LogsSearchRequest"
        ]
      },
      {
        "name": "schema",
        "parameterTypes": [
          "org.springframework.ui.Model",
          "java.lang.String"
        ]
      },
      {
        "name": "settings",
        "parameterTypes": [
          "org.springframework.ui.Model"
        ]
      },
      {
        "name": "settings",
        "parameterTypes": [
          "java.util.Map",
          "org.springframework.ui.Model"
        ]
      },
      {
        "name": "settingsAppearance",
        "parameterTypes": [
          "org.springframework.ui.Model"
        ]
      },
      {
        "name": "show",
        "parameterTypes": [
          "org.springframework.ui.Model",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "store",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.util.MultiValueMap",
          "java.util.Map",
          "org.springframework.web.servlet.mvc.support.RedirectAttributes",
          "java.security.Principal"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.dbmapping.DbObjectSchema",
    "allDeclaredFields": true
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.dbmapping.SnapAdminRepository",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "jdbcTemplate"
      },
      {
        "name": "snapAdmin"
      }
    ],
    "methods": [
      {
        "name": "attachManyToMany",
        "parameterTypes": [
          "space.mori.dalbodeule.snapadmin.external.dbmapping.DbObjectSchema",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "create",
        "parameterTypes": [
          "space.mori.dalbodeule.snapadmin.external.dbmapping.DbObjectSchema",
          "java.util.Map",
          "java.util.Map",
          "java.lang.String"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "space.mori.dalbodeule.snapadmin.external.dbmapping.DbObjectSchema",
          "java.lang.String"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "space.mori.dalbodeule.snapadmin.external.dbmapping.DbObjectSchema",
          "space.mori.dalbodeule.snapadmin.external.dbmapping.DbObject"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "space.mori.dalbodeule.snapadmin.external.dbmapping.DbObjectSchema",
          "java.util.Map",
          "java.util.Map"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.dbmapping.SnapAdminRepository$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.SnapAdmin",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "jakarta.persistence.EntityManager",
          "space.mori.dalbodeule.snapadmin.external.SnapAdminProperties"
        ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.SnapAdminAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "props"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "internalDataSource",
        "parameterTypes": [ ]
      },
      {
        "name": "internalEntityManagerFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "internalTransactionTemplate",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.SnapAdminAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.SnapAdminAutoConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.SnapAdminAutoConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.SnapAdminMvcConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "properties"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.SnapAdminMvcConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.SnapAdminProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBaseUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getModelsPackage",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isSqlConsoleEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isTestMode",
        "parameterTypes": [ ]
      },
      {
        "name": "setBaseUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setModelsPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqlConsoleEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTestMode",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.StartupAuthCheckRunner",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "properties"
      },
      {
        "name": "snapAdmin"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "serverPortListenerBean",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.StartupAuthCheckRunner$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.StartupAuthCheckRunner$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.external.StartupAuthCheckRunner$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.internal.InternalSnapAdminConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.internal.InternalSnapAdminConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.internal.model.ConsoleQuery",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCreatedAt",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getSql",
        "parameterTypes": [ ]
      },
      {
        "name": "getTitle",
        "parameterTypes": [ ]
      },
      {
        "name": "getUpdatedAt",
        "parameterTypes": [ ]
      },
      {
        "name": "setCreatedAt",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdatedAt",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.internal.model.UserAction",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getActionType",
        "parameterTypes": [ ]
      },
      {
        "name": "getCreatedAt",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormattedDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getJavaClass",
        "parameterTypes": [ ]
      },
      {
        "name": "getOnTable",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrimaryKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getSql",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "setActionType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreatedAt",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setJavaClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrimaryKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.internal.model.UserSetting",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getSettingValue",
        "parameterTypes": [ ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSettingValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.internal.repository.ConsoleQueryRepository",
    "allPublicMethods": true
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.internal.repository.CustomActionRepository",
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.internal.repository.CustomActionRepositoryImpl",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "entityManager"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.internal.repository.UserActionRepository",
    "allPublicMethods": true
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.internal.repository.UserSettingsRepository",
    "allPublicMethods": true
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.internal.service.ConsoleQueryService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "internalTransactionTemplate"
      },
      {
        "name": "repo"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.internal.service.UserActionService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "customRepo"
      },
      {
        "name": "internalTransactionTemplate"
      },
      {
        "name": "repo"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.internal.service.UserSettingsService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "internalTransactionTemplate"
      },
      {
        "name": "repo"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "space.mori.dalbodeule.snapadmin.internal.UserConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "repo"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  }
]
